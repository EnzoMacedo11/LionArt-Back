generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int        @id @default(autoincrement())
    email     String     @unique @db.VarChar(255)
    password  String     @db.VarChar(255)
    name      String     @db.VarChar(255)
    lastName  String     @db.VarChar(255)
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    Session   Session[]
    Comments  Comments[]
    UserArts  UserArts[]
}

model Session {
    id        Int      @id @default(autoincrement())
    userId    Int
    User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    token     String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Art {
    id          Int        @id @default(autoincrement())
    title       String     @db.VarChar(255)
    description String     @db.VarChar(255)
    author      String     @db.VarChar(255)
    age         String     @db.VarChar(255)
    type        String     @db.VarChar(255)
    imageUrl    String     @db.VarChar(255)
    likes       Int
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    UserArts    UserArts[]
}

model UserArts {
    id Int @id @default(autoincrement())

    User   User? @relation(fields: [userId], references: [id])
    userId Int?
    Art    Art?  @relation(fields: [artId], references: [id])
    artId  Int?
    
}

model Comments {
    id        Int      @id @default(autoincrement())
    userId    Int
    User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    comment   String   @db.VarChar(255)
    createdAt DateTime @default(now())
}
